// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: vehicle.proto

package proto

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type VehicleVIN struct {
	Vin                  string   `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VehicleVIN) Reset()         { *m = VehicleVIN{} }
func (m *VehicleVIN) String() string { return proto.CompactTextString(m) }
func (*VehicleVIN) ProtoMessage()    {}
func (*VehicleVIN) Descriptor() ([]byte, []int) {
	return fileDescriptor_416ab71f8212867c, []int{0}
}
func (m *VehicleVIN) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleVIN.Unmarshal(m, b)
}
func (m *VehicleVIN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleVIN.Marshal(b, m, deterministic)
}
func (m *VehicleVIN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleVIN.Merge(m, src)
}
func (m *VehicleVIN) XXX_Size() int {
	return xxx_messageInfo_VehicleVIN.Size(m)
}
func (m *VehicleVIN) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleVIN.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleVIN proto.InternalMessageInfo

func (m *VehicleVIN) GetVin() string {
	if m != nil {
		return m.Vin
	}
	return ""
}

// TODO: consider creating a separate request/reponse vehicle since updated_at can't be set on request
type Vehicle struct {
	Vin                  string   `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty" xml:"vin"`
	Make                 string   `protobuf:"bytes,2,opt,name=make,proto3" json:"make,omitempty" xml:"make"`
	Model                string   `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty" xml:"model"`
	Year                 int32    `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty" xml:"year"`
	ExteriorColor        string   `protobuf:"bytes,5,opt,name=exterior_color,json=exteriorColor,proto3" json:"exterior_color,omitempty" db:"exterior_color" xml:"exterior_color"`
	InteriorColor        string   `protobuf:"bytes,6,opt,name=interior_color,json=interiorColor,proto3" json:"interior_color,omitempty" db:"interior_color" xml:"interior_color"`
	UpdatedAt            int64    `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" db:"updated_at" xml:"updated_at"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vehicle) Reset()         { *m = Vehicle{} }
func (m *Vehicle) String() string { return proto.CompactTextString(m) }
func (*Vehicle) ProtoMessage()    {}
func (*Vehicle) Descriptor() ([]byte, []int) {
	return fileDescriptor_416ab71f8212867c, []int{1}
}
func (m *Vehicle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vehicle.Unmarshal(m, b)
}
func (m *Vehicle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vehicle.Marshal(b, m, deterministic)
}
func (m *Vehicle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vehicle.Merge(m, src)
}
func (m *Vehicle) XXX_Size() int {
	return xxx_messageInfo_Vehicle.Size(m)
}
func (m *Vehicle) XXX_DiscardUnknown() {
	xxx_messageInfo_Vehicle.DiscardUnknown(m)
}

var xxx_messageInfo_Vehicle proto.InternalMessageInfo

func (m *Vehicle) GetVin() string {
	if m != nil {
		return m.Vin
	}
	return ""
}

func (m *Vehicle) GetMake() string {
	if m != nil {
		return m.Make
	}
	return ""
}

func (m *Vehicle) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Vehicle) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Vehicle) GetExteriorColor() string {
	if m != nil {
		return m.ExteriorColor
	}
	return ""
}

func (m *Vehicle) GetInteriorColor() string {
	if m != nil {
		return m.InteriorColor
	}
	return ""
}

func (m *Vehicle) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type VehicleQuery struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VehicleQuery) Reset()         { *m = VehicleQuery{} }
func (m *VehicleQuery) String() string { return proto.CompactTextString(m) }
func (*VehicleQuery) ProtoMessage()    {}
func (*VehicleQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_416ab71f8212867c, []int{2}
}
func (m *VehicleQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleQuery.Unmarshal(m, b)
}
func (m *VehicleQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleQuery.Marshal(b, m, deterministic)
}
func (m *VehicleQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleQuery.Merge(m, src)
}
func (m *VehicleQuery) XXX_Size() int {
	return xxx_messageInfo_VehicleQuery.Size(m)
}
func (m *VehicleQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleQuery.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleQuery proto.InternalMessageInfo

func (m *VehicleQuery) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_416ab71f8212867c, []int{3}
}
func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (m *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(m, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

func init() {
	proto.RegisterType((*VehicleVIN)(nil), "vehicle.VehicleVIN")
	proto.RegisterType((*Vehicle)(nil), "vehicle.Vehicle")
	proto.RegisterType((*VehicleQuery)(nil), "vehicle.VehicleQuery")
	proto.RegisterType((*EmptyMessage)(nil), "vehicle.EmptyMessage")
}

func init() { proto.RegisterFile("vehicle.proto", fileDescriptor_416ab71f8212867c) }

var fileDescriptor_416ab71f8212867c = []byte{
	// 444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4f, 0x6f, 0x94, 0x40,
	0x14, 0x2f, 0xdd, 0xd2, 0xcd, 0xbe, 0x2e, 0xd8, 0x8c, 0x9a, 0x90, 0x1e, 0x0a, 0x99, 0xd4, 0x84,
	0x83, 0x6e, 0x8d, 0xa6, 0x97, 0x9a, 0x1e, 0xdc, 0xd5, 0x18, 0x13, 0x35, 0x91, 0x8d, 0x3d, 0x78,
	0x69, 0x58, 0x78, 0xb2, 0x44, 0xe8, 0xac, 0xc3, 0xd0, 0x74, 0xbf, 0x81, 0x9f, 0x92, 0xc4, 0x2f,
	0xe0, 0x81, 0x93, 0x47, 0x33, 0x03, 0x74, 0x61, 0xc5, 0x43, 0x4f, 0xcc, 0xef, 0x2f, 0xbc, 0xbc,
	0x01, 0x8c, 0x1b, 0x5c, 0xc6, 0x41, 0x82, 0x93, 0x15, 0x67, 0x82, 0x91, 0x61, 0x0d, 0x8f, 0x9e,
	0x45, 0xb1, 0x58, 0xe6, 0x8b, 0x49, 0xc0, 0xd2, 0xd3, 0x88, 0x45, 0xec, 0x54, 0xe9, 0x8b, 0xfc,
	0x9b, 0x42, 0x0a, 0xa8, 0x53, 0x95, 0xa3, 0xc7, 0x00, 0x97, 0x55, 0xf2, 0xf2, 0xfd, 0x27, 0x72,
	0x08, 0x83, 0x9b, 0xf8, 0xda, 0xd2, 0x1c, 0xcd, 0x1d, 0x79, 0xf2, 0x48, 0x7f, 0x0e, 0x60, 0x58,
	0x1b, 0x88, 0xdd, 0x52, 0xa7, 0x46, 0x59, 0xd8, 0xa3, 0xdb, 0x34, 0x39, 0xa7, 0xd2, 0xa6, 0xcc,
	0x84, 0xc2, 0x5e, 0xea, 0x7f, 0x47, 0x6b, 0x57, 0x39, 0xcc, 0xb2, 0xb0, 0x41, 0x39, 0x24, 0x49,
	0x3d, 0xa5, 0x91, 0x27, 0xa0, 0xa7, 0x2c, 0xc4, 0xc4, 0x1a, 0x28, 0xd3, 0x83, 0xb2, 0xb0, 0x0f,
	0x2a, 0x93, 0x64, 0xa9, 0x57, 0xa9, 0xb2, 0x6a, 0x8d, 0x3e, 0xb7, 0xf6, 0x1c, 0xcd, 0xd5, 0x5b,
	0x55, 0x92, 0xa4, 0x9e, 0xd2, 0xc8, 0x1c, 0x4c, 0xbc, 0x15, 0xc8, 0x63, 0xc6, 0xaf, 0x02, 0x96,
	0x30, 0x6e, 0xe9, 0xaa, 0xf3, 0x69, 0x59, 0xd8, 0x6e, 0xb8, 0x38, 0xa7, 0x5d, 0x95, 0x3a, 0xaa,
	0x61, 0x8b, 0xf4, 0x8c, 0x86, 0x98, 0x49, 0x2c, 0x4b, 0xe3, 0xeb, 0x4e, 0xe9, 0x7e, 0xb7, 0xb4,
	0xab, 0xd6, 0xa5, 0x5b, 0xa4, 0x67, 0x34, 0x44, 0x55, 0x3a, 0x03, 0xc8, 0x57, 0xa1, 0x2f, 0x30,
	0xbc, 0xf2, 0x85, 0x35, 0x74, 0x34, 0x77, 0x30, 0x3d, 0x29, 0x0b, 0xdb, 0x91, 0x85, 0x1b, 0xa5,
	0x2e, 0x6b, 0x11, 0xde, 0xa8, 0x06, 0xaf, 0x05, 0x3d, 0x81, 0x71, 0xbd, 0x89, 0xcf, 0x39, 0xf2,
	0x35, 0x79, 0x04, 0xfa, 0x0f, 0x79, 0xa8, 0xd7, 0x55, 0x01, 0x6a, 0xc2, 0xf8, 0x6d, 0xba, 0x12,
	0xeb, 0x8f, 0x98, 0x65, 0x7e, 0x84, 0x2f, 0x7e, 0xef, 0xde, 0xc5, 0xe6, 0x82, 0x71, 0x24, 0x67,
	0x00, 0xef, 0x50, 0x34, 0x3b, 0x7d, 0x38, 0x69, 0xee, 0xd1, 0xe6, 0x1a, 0x1c, 0x1d, 0x6e, 0x93,
	0x74, 0x87, 0x9c, 0x81, 0x31, 0xe3, 0xe8, 0x0b, 0x6c, 0x92, 0xff, 0x98, 0xfe, 0x17, 0xfb, 0xa2,
	0x26, 0xb8, 0x5f, 0xec, 0x02, 0x8c, 0x37, 0x98, 0xe0, 0x26, 0xd6, 0xfb, 0x9d, 0x8f, 0xef, 0xc8,
	0xf6, 0xc8, 0x74, 0x87, 0xbc, 0x82, 0xf1, 0x87, 0x38, 0x6b, 0x86, 0xcc, 0x48, 0xbf, 0xb1, 0xef,
	0xcd, 0xcf, 0x35, 0x72, 0x01, 0xe6, 0x1c, 0x7d, 0x1e, 0x2c, 0x7b, 0xe2, 0xed, 0x05, 0xf4, 0xc7,
	0xa7, 0x07, 0x7f, 0x7e, 0x1d, 0x6b, 0x5f, 0xf5, 0xea, 0xb7, 0xdb, 0x57, 0x8f, 0x97, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x3e, 0xde, 0xdb, 0x81, 0xae, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VehicleStoreClient is the client API for VehicleStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VehicleStoreClient interface {
	GetVehicle(ctx context.Context, in *VehicleVIN, opts ...grpc.CallOption) (*Vehicle, error)
	CreateVehicle(ctx context.Context, in *Vehicle, opts ...grpc.CallOption) (*Vehicle, error)
	UpdateVehicle(ctx context.Context, in *Vehicle, opts ...grpc.CallOption) (*Vehicle, error)
	DeleteVehicle(ctx context.Context, in *VehicleVIN, opts ...grpc.CallOption) (*EmptyMessage, error)
	ListVehicles(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (VehicleStore_ListVehiclesClient, error)
	SearchVehicles(ctx context.Context, in *VehicleQuery, opts ...grpc.CallOption) (VehicleStore_SearchVehiclesClient, error)
}

type vehicleStoreClient struct {
	cc *grpc.ClientConn
}

func NewVehicleStoreClient(cc *grpc.ClientConn) VehicleStoreClient {
	return &vehicleStoreClient{cc}
}

func (c *vehicleStoreClient) GetVehicle(ctx context.Context, in *VehicleVIN, opts ...grpc.CallOption) (*Vehicle, error) {
	out := new(Vehicle)
	err := c.cc.Invoke(ctx, "/vehicle.VehicleStore/GetVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vehicleStoreClient) CreateVehicle(ctx context.Context, in *Vehicle, opts ...grpc.CallOption) (*Vehicle, error) {
	out := new(Vehicle)
	err := c.cc.Invoke(ctx, "/vehicle.VehicleStore/CreateVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vehicleStoreClient) UpdateVehicle(ctx context.Context, in *Vehicle, opts ...grpc.CallOption) (*Vehicle, error) {
	out := new(Vehicle)
	err := c.cc.Invoke(ctx, "/vehicle.VehicleStore/UpdateVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vehicleStoreClient) DeleteVehicle(ctx context.Context, in *VehicleVIN, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/vehicle.VehicleStore/DeleteVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vehicleStoreClient) ListVehicles(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (VehicleStore_ListVehiclesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VehicleStore_serviceDesc.Streams[0], "/vehicle.VehicleStore/ListVehicles", opts...)
	if err != nil {
		return nil, err
	}
	x := &vehicleStoreListVehiclesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VehicleStore_ListVehiclesClient interface {
	Recv() (*Vehicle, error)
	grpc.ClientStream
}

type vehicleStoreListVehiclesClient struct {
	grpc.ClientStream
}

func (x *vehicleStoreListVehiclesClient) Recv() (*Vehicle, error) {
	m := new(Vehicle)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *vehicleStoreClient) SearchVehicles(ctx context.Context, in *VehicleQuery, opts ...grpc.CallOption) (VehicleStore_SearchVehiclesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VehicleStore_serviceDesc.Streams[1], "/vehicle.VehicleStore/SearchVehicles", opts...)
	if err != nil {
		return nil, err
	}
	x := &vehicleStoreSearchVehiclesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VehicleStore_SearchVehiclesClient interface {
	Recv() (*Vehicle, error)
	grpc.ClientStream
}

type vehicleStoreSearchVehiclesClient struct {
	grpc.ClientStream
}

func (x *vehicleStoreSearchVehiclesClient) Recv() (*Vehicle, error) {
	m := new(Vehicle)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// VehicleStoreServer is the server API for VehicleStore service.
type VehicleStoreServer interface {
	GetVehicle(context.Context, *VehicleVIN) (*Vehicle, error)
	CreateVehicle(context.Context, *Vehicle) (*Vehicle, error)
	UpdateVehicle(context.Context, *Vehicle) (*Vehicle, error)
	DeleteVehicle(context.Context, *VehicleVIN) (*EmptyMessage, error)
	ListVehicles(*EmptyMessage, VehicleStore_ListVehiclesServer) error
	SearchVehicles(*VehicleQuery, VehicleStore_SearchVehiclesServer) error
}

// UnimplementedVehicleStoreServer can be embedded to have forward compatible implementations.
type UnimplementedVehicleStoreServer struct {
}

func (*UnimplementedVehicleStoreServer) GetVehicle(ctx context.Context, req *VehicleVIN) (*Vehicle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVehicle not implemented")
}
func (*UnimplementedVehicleStoreServer) CreateVehicle(ctx context.Context, req *Vehicle) (*Vehicle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVehicle not implemented")
}
func (*UnimplementedVehicleStoreServer) UpdateVehicle(ctx context.Context, req *Vehicle) (*Vehicle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVehicle not implemented")
}
func (*UnimplementedVehicleStoreServer) DeleteVehicle(ctx context.Context, req *VehicleVIN) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVehicle not implemented")
}
func (*UnimplementedVehicleStoreServer) ListVehicles(req *EmptyMessage, srv VehicleStore_ListVehiclesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListVehicles not implemented")
}
func (*UnimplementedVehicleStoreServer) SearchVehicles(req *VehicleQuery, srv VehicleStore_SearchVehiclesServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchVehicles not implemented")
}

func RegisterVehicleStoreServer(s *grpc.Server, srv VehicleStoreServer) {
	s.RegisterService(&_VehicleStore_serviceDesc, srv)
}

func _VehicleStore_GetVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VehicleVIN)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VehicleStoreServer).GetVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vehicle.VehicleStore/GetVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VehicleStoreServer).GetVehicle(ctx, req.(*VehicleVIN))
	}
	return interceptor(ctx, in, info, handler)
}

func _VehicleStore_CreateVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Vehicle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VehicleStoreServer).CreateVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vehicle.VehicleStore/CreateVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VehicleStoreServer).CreateVehicle(ctx, req.(*Vehicle))
	}
	return interceptor(ctx, in, info, handler)
}

func _VehicleStore_UpdateVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Vehicle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VehicleStoreServer).UpdateVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vehicle.VehicleStore/UpdateVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VehicleStoreServer).UpdateVehicle(ctx, req.(*Vehicle))
	}
	return interceptor(ctx, in, info, handler)
}

func _VehicleStore_DeleteVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VehicleVIN)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VehicleStoreServer).DeleteVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vehicle.VehicleStore/DeleteVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VehicleStoreServer).DeleteVehicle(ctx, req.(*VehicleVIN))
	}
	return interceptor(ctx, in, info, handler)
}

func _VehicleStore_ListVehicles_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmptyMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VehicleStoreServer).ListVehicles(m, &vehicleStoreListVehiclesServer{stream})
}

type VehicleStore_ListVehiclesServer interface {
	Send(*Vehicle) error
	grpc.ServerStream
}

type vehicleStoreListVehiclesServer struct {
	grpc.ServerStream
}

func (x *vehicleStoreListVehiclesServer) Send(m *Vehicle) error {
	return x.ServerStream.SendMsg(m)
}

func _VehicleStore_SearchVehicles_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VehicleQuery)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VehicleStoreServer).SearchVehicles(m, &vehicleStoreSearchVehiclesServer{stream})
}

type VehicleStore_SearchVehiclesServer interface {
	Send(*Vehicle) error
	grpc.ServerStream
}

type vehicleStoreSearchVehiclesServer struct {
	grpc.ServerStream
}

func (x *vehicleStoreSearchVehiclesServer) Send(m *Vehicle) error {
	return x.ServerStream.SendMsg(m)
}

var _VehicleStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vehicle.VehicleStore",
	HandlerType: (*VehicleStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVehicle",
			Handler:    _VehicleStore_GetVehicle_Handler,
		},
		{
			MethodName: "CreateVehicle",
			Handler:    _VehicleStore_CreateVehicle_Handler,
		},
		{
			MethodName: "UpdateVehicle",
			Handler:    _VehicleStore_UpdateVehicle_Handler,
		},
		{
			MethodName: "DeleteVehicle",
			Handler:    _VehicleStore_DeleteVehicle_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListVehicles",
			Handler:       _VehicleStore_ListVehicles_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SearchVehicles",
			Handler:       _VehicleStore_SearchVehicles_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "vehicle.proto",
}

func NewPopulatedVehicleVIN(r randyVehicle, easy bool) *VehicleVIN {
	this := &VehicleVIN{}
	this.Vin = string(randStringVehicle(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedVehicle(r, 2)
	}
	return this
}

func NewPopulatedVehicle(r randyVehicle, easy bool) *Vehicle {
	this := &Vehicle{}
	this.Vin = string(randStringVehicle(r))
	this.Make = string(randStringVehicle(r))
	this.Model = string(randStringVehicle(r))
	this.Year = int32(r.Int31())
	if r.Intn(2) == 0 {
		this.Year *= -1
	}
	this.ExteriorColor = string(randStringVehicle(r))
	this.InteriorColor = string(randStringVehicle(r))
	this.UpdatedAt = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UpdatedAt *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedVehicle(r, 8)
	}
	return this
}

func NewPopulatedVehicleQuery(r randyVehicle, easy bool) *VehicleQuery {
	this := &VehicleQuery{}
	this.Query = string(randStringVehicle(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedVehicle(r, 2)
	}
	return this
}

func NewPopulatedEmptyMessage(r randyVehicle, easy bool) *EmptyMessage {
	this := &EmptyMessage{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedVehicle(r, 1)
	}
	return this
}

type randyVehicle interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneVehicle(r randyVehicle) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringVehicle(r randyVehicle) string {
	v1 := r.Intn(100)
	tmps := make([]rune, v1)
	for i := 0; i < v1; i++ {
		tmps[i] = randUTF8RuneVehicle(r)
	}
	return string(tmps)
}
func randUnrecognizedVehicle(r randyVehicle, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldVehicle(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldVehicle(dAtA []byte, r randyVehicle, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateVehicle(dAtA, uint64(key))
		v2 := r.Int63()
		if r.Intn(2) == 0 {
			v2 *= -1
		}
		dAtA = encodeVarintPopulateVehicle(dAtA, uint64(v2))
	case 1:
		dAtA = encodeVarintPopulateVehicle(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateVehicle(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateVehicle(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateVehicle(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateVehicle(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
